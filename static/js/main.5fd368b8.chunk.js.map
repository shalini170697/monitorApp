{"version":3,"sources":["components/home-page/HomePage.style.jsx","components/home-page/details-modal/DetailsModal.style.jsx","components/home-page/details-modal/DetailsModal.jsx","components/home-page/result-page/ResultPage.style.jsx","components/home-page/result-page/ResultPage.jsx","components/home-page/HomePage.jsx","components/login-page/LoginPage.style.jsx","components/login-page/LoginPage.jsx","components/login-page/index.jsx","components/signup-page/SignUpPage.style.jsx","components/signup-page/SignUpPage.jsx","components/signup-page/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledHomePage","styled","div","StyledSeacrhBox","StyledModal","props","bgColor","DetailsModal","className","id","tabindex","role","item","cover_color","titles","en","type","src","banner_image","alt","href","trailer_url","genres","map","index","length","descriptions","Date","start_date","toDateString","end_date","episodes_count","episode_duration","Math","round","score","season_period","season_year","StyledGrid","StyledGridItem","StyledResults","h1","ResultPage","useState","selectedAnime","setSelectedAnime","resultItems","style","width","onClick","cover_image","height","childitem","anilist_id","searchOptions","HomePage","animeData","setAnimeData","selectedOption","setSelectedOption","searchInput","setSearchInput","setResultItems","searchClick","setSearchlick","useEffect","a","axios","get","data","documents","console","log","localStorage","setItem","JSON","stringify","setIsLoggedIn","value","onChange","e","target","placeholder","filter","toLowerCase","includes","flag","forEach","i","alert","StyledLoginPage","StyledHeading","LoginPage","userList","setUserList","email","setEmail","password","setPassword","parse","getItem","validatedEmail","test","String","validateEmail","setIsSignUp","StyledSignUpPage","SignUpPage","confirmPassword","setConfirmPassword","userData","push","App","isLoggedIn","isSignUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fd368b8.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledHomePage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 712px;\r\n`;\r\n\r\nexport const StyledSeacrhBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 660px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  border: 1px solid black;\r\n  background-image: url(\"https://image.freepik.com/free-photo/navy-blue-concrete-wall-with-scratches_53876-102666.jpg\");\r\n  min-width: 736px;\r\n\r\n  .search-bar{\r\n    width: 70%;\r\n  }\r\n\r\n  .search-btn {\r\n    width: 150px;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .dropdown-toggle {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n  }\r\n\r\n  .logout-btn{\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 20px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledModal = styled.div`\r\n  .modal-dialog {\r\n    max-width: 90%;\r\n    height: 90%;\r\n  }\r\n\r\n  .modal-content {\r\n    height: 100%;\r\n  }\r\n\r\n  .card-img-top {\r\n    margin-bottom: 20px;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .modal-body {\r\n    background-color: ${(props) => props.bgColor};\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  .card-title {\r\n    min-height: 48px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: initial !important;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n\r\n  .card-text {\r\n    text-align: left;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: initial !important;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { StyledModal } from \"./DetailsModal.style\";\r\n\r\nfunction DetailsModal(props) {\r\n  return (\r\n    <StyledModal\r\n      className=\"modal fade\"\r\n      id=\"exampleModal\"\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n      bgColor={props.item.cover_color}\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n              {props.item.titles.en}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <img\r\n              className=\"card-img-top\"\r\n              src={props.item.banner_image}\r\n              alt=\"\"\r\n            />\r\n            <p className=\"card-text\">\r\n              <strong>Title: </strong>\r\n              {props.item.titles.en}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>Trailer: </strong>\r\n              <a href={props.item.trailer_url}>\r\n                {props.item.trailer_url ? \"Link\" : \"N/A\"}\r\n              </a>\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>Genres: </strong>\r\n              {props.item.genres.map((item, index) => {\r\n                return `${item}${index !== item.length - 1 ? \", \" : \".\"}`;\r\n              })}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>Description: </strong>\r\n              {props.item.descriptions.en ? props.item.descriptions.en : \"N/A\"}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>Start Date: </strong>\r\n              {new Date(props.item.start_date).toDateString()}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>End Date: </strong>\r\n              {new Date(props.item.end_date).toDateString()}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>No. of Episodes: </strong>\r\n              {props.item.episodes_count}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>Episode Duration: </strong>\r\n              {`${props.item.episode_duration} minutes`}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>Rating: </strong>\r\n              {Math.round((props.item.score / 20) * 10) / 10}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>Season Period: </strong>\r\n              {props.item.season_period}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <strong>Season Year: </strong>\r\n              {props.item.season_year}\r\n            </p>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledModal>\r\n  );\r\n}\r\n\r\nexport default DetailsModal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 20px;\r\n  width: 100%;\r\n  min-width: 736px;\r\n`;\r\n\r\nexport const StyledGridItem = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 4px;\r\n  margin-bottom: 20px;\r\n  background-color: ${(props) => props.bgColor};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .card-title {\r\n    min-height: 48px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n\r\n  .card-text {\r\n    text-align: left;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 5;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n\r\n  .card-body {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport const StyledResults = styled.h1`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n  margin-top: 20px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport DetailsModal from \"../details-modal/DetailsModal\";\r\nimport { StyledGrid, StyledGridItem, StyledResults } from \"./ResultPage.style\";\r\n\r\nfunction ResultPage(props) {\r\n  const [selectedAnime, setSelectedAnime] = useState();\r\n\r\n  return (\r\n    <>\r\n      {props.resultItems.length && (\r\n        <StyledResults>Search Results: </StyledResults>\r\n      )}\r\n      <StyledGrid>\r\n        {props.resultItems.length ? (\r\n          props.resultItems.map((item) => {\r\n            return (\r\n              <StyledGridItem\r\n                key={item.anilist_id}\r\n                className=\"card\"\r\n                style={{ width: \"14rem\" }}\r\n                data-toggle=\"modal\"\r\n                data-target=\"#exampleModal\"\r\n                onClick={() => {\r\n                  setSelectedAnime(item);\r\n                }}\r\n                bgColor={item.cover_color}\r\n              >\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src={item.cover_image}\r\n                  alt=\"\"\r\n                  style={{ height: \"318px\" }}\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{item.titles.en}</h5>\r\n                  <p className=\"card-text\">\r\n                    <strong>Trailer: </strong>\r\n                    <a href={item.trailer_url}>\r\n                      {item.trailer_url ? \"Link\" : \"N/A\"}\r\n                    </a>\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Genres: </strong>\r\n                    {item.genres.map((childitem, index) => {\r\n                      return `${childitem}, `;\r\n                    })}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Description: </strong>\r\n                    {item.descriptions.en ? item.descriptions.en : \"N/A\"}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Rating: </strong>\r\n                    {Math.round((item.score / 20) * 10) / 10}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Season Year: </strong>\r\n                    {item.season_year}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>No. of Episodes: </strong>\r\n                    {item.episodes_count}\r\n                  </p>\r\n                </div>\r\n                {selectedAnime && (\r\n                  <DetailsModal item={selectedAnime} id={selectedAnime.id} />\r\n                )}\r\n              </StyledGridItem>\r\n            );\r\n          })\r\n        ) : (\r\n          <h1>No Results Found!</h1>\r\n        )}\r\n      </StyledGrid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  StyledHomePage,\r\n  StyledSeacrhBox,\r\n} from \"./HomePage.style\";\r\nimport ResultPage from \"./result-page/ResultPage\";\r\n\r\nconst searchOptions = [\"10 seconds\", \"1 minute\", \"5 minutes\", \"10 minutes\", \"15 minutes\", \"1 hour\", \"4 hours\", \"6 hours\"];\r\n\r\nfunction HomePage(props) {\r\n  const [animeData, setAnimeData] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(searchOptions[0]);\r\n  const [searchInput, setSearchInput] = useState();\r\n  const [resultItems, setResultItems] = useState([]);\r\n  const [searchClick, setSearchlick] = useState(false);\r\n\r\n  useEffect(() => { \r\n    (async () => {\r\n      try {\r\n        const data = (await axios.get(\"https://api.aniapi.com/v1/anime/\")).data\r\n          .data;\r\n        setAnimeData(data.documents);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const searchHandler = () => {\r\n    if (searchInput) {\r\n      const data = animeData.filter((item) => {\r\n        if (selectedOption === searchOptions[0]) {\r\n          return item.titles.en\r\n            .toLowerCase()\r\n            .includes(searchInput.toLowerCase());\r\n        }\r\n        if (selectedOption === searchOptions[1]) {\r\n          let flag = false;\r\n          item.genres.forEach((i) => {\r\n            if (i.toLowerCase() === searchInput.toLowerCase()) {\r\n              flag = true;\r\n            }\r\n          });\r\n          return flag;\r\n        }\r\n        if (selectedOption === searchOptions[2]) {\r\n          return item.descriptions.en\r\n            .toLowerCase()\r\n            .includes(searchInput.toLowerCase());\r\n        }\r\n        return false;\r\n      });\r\n      setSearchlick(true);\r\n      setResultItems(data);\r\n    } else {\r\n      alert(\"Empty Seacrh Box!\");\r\n    }\r\n  };\r\n  const logoutHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", JSON.stringify(false));\r\n    props.setIsLoggedIn(false);\r\n  };\r\n  return (\r\n    <StyledHomePage>\r\n      <StyledSeacrhBox className=\"search-box\">\r\n        <button className=\"btn btn-danger logout-btn\" onClick={logoutHandler}>\r\n          Log Out\r\n        </button>\r\n        <div className=\"input-group search-bar\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchInput}\r\n            onChange={(e) => {\r\n              setSearchInput(e.target.value);\r\n            }}\r\n            placeholder=\"Search Url...\"\r\n            className=\"form-control\"\r\n            aria-label=\"Text input with dropdown button\"\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-primary btn-outline-primary dropdown-toggle\"\r\n              type=\"button\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              {selectedOption}\r\n            </button>\r\n            <div className=\"dropdown-menu\">\r\n              {searchOptions.map((item) => {\r\n                return (\r\n                  <span\r\n                    key={item}\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => {\r\n                      setSelectedOption(item);\r\n                    }}\r\n                  >\r\n                    {item}\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn btn-primary search-btn\" onClick={searchHandler}>\r\n          Search\r\n        </button>\r\n      </StyledSeacrhBox>\r\n      {searchClick && (\r\n        <ResultPage\r\n          resultItems={resultItems}\r\n          searchInput={searchInput}\r\n        ></ResultPage>\r\n      )}\r\n    </StyledHomePage>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLoginPage = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color:aqua;\r\n  background-image: url(\"https://image.freepik.com/free-photo/fading-blue-background_53876-88684.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  .login-form {\r\n    text-align: left;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    background: #fff;\r\n  }\r\n  .sign-up {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const StyledHeading = styled.h1`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 7%;\r\n  color: #fff;\r\n  height: 100px;\r\n  background-image: url(\"https://image.freepik.com/free-vector/green-sand-paper_53876-86281.jpg\");\r\n  border-radius: 20px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { StyledHeading, StyledLoginPage } from \"./LoginPage.style\";\r\n\r\nfunction LoginPage(props) {\r\n  const [userList, setUserList] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(\"userList\"));\r\n    setUserList(data);\r\n  }, []);\r\n\r\n  const validateEmail = (email) => {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    let flag = false;\r\n    const validatedEmail = validateEmail(email);\r\n    if (!validatedEmail) {\r\n      alert(\"Invalid Email!\");\r\n      return;\r\n    }\r\n    if (!password || password.length < 8) {\r\n      alert(\"Password has less than 8 characters!\");\r\n      return;\r\n    }\r\n    if (userList) {\r\n      userList.forEach((item) => {\r\n        if (item.email === email && item.password === password) {\r\n          flag = true;\r\n        }\r\n      });\r\n    }\r\n    if (flag) {\r\n      localStorage.setItem(\"activeUser\", JSON.stringify(email));\r\n      localStorage.setItem(\"isLoggedIn\", JSON.stringify(true));\r\n      props.setIsLoggedIn(true);\r\n    } else {\r\n      alert(\"Incorrect Email or Password\");\r\n    }\r\n  };\r\n\r\n  const signupHandler = () => {\r\n    props.setIsSignUp(true);\r\n  };\r\n  return (\r\n    <StyledLoginPage>\r\n      <StyledHeading>\r\n        <h1>Web Page Monitor</h1>\r\n      </StyledHeading>\r\n      <div className=\"login-form\">\r\n        <div className=\"form-group\">\r\n          <label>Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={loginHandler}\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Login\r\n        </button>\r\n        <button\r\n          onClick={signupHandler}\r\n          type=\"submit\"\r\n          className=\"btn btn-secondary sign-up\"\r\n        >\r\n          SignUp\r\n        </button>\r\n      </div>\r\n    </StyledLoginPage>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import LoginPage from \"./LoginPage\";\r\n\r\nexport default LoginPage;","import styled from \"styled-components\";\r\n\r\nexport const StyledSignUpPage = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: url(\"https://image.freepik.com/free-photo/blue-smooth-wall-textured-background_53876-106133.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  .login-form {\r\n    text-align: left;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    background: #fff;\r\n  }\r\n\r\n  .login-btn {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const StyledHeading = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 7%;\r\n  color: #fff;\r\n  height: 100px;\r\n  // background-image: url(\"\");\r\n  border-radius: 20px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { StyledHeading, StyledSignUpPage } from \"./SignUpPage.style\";\r\n\r\nfunction SignUpPage(props) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n\r\n  const validateEmail = (email) => {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    let userList = [];\r\n    const validatedEmail = validateEmail(email);\r\n    if (!validatedEmail) {\r\n      alert(\"Invalid Email!\");\r\n      return;\r\n    }\r\n    if (!password || password.length < 8) {\r\n      alert(\"Password has less than 8 characters!\");\r\n      return;\r\n    }\r\n    const userData = JSON.parse(localStorage.getItem(\"userList\"));\r\n    if (userData) {\r\n      userList = [...userData];\r\n    }\r\n    if (email && password && confirmPassword) {\r\n      if (password !== confirmPassword) {\r\n        alert(\"Password and Confirm Password fields do not match!\");\r\n      } else {\r\n        const flag = userList.filter((item) => {\r\n          return item.email === email;\r\n        });\r\n        if (!flag.length) {\r\n          userList.push({ email: email, password: password, data: {} });\r\n          localStorage.setItem(\"userList\", JSON.stringify(userList));\r\n          props.setIsSignUp(false);\r\n        } else {\r\n          alert(\"User Already Exists!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <StyledSignUpPage>\r\n      <StyledHeading>\r\n        <h1>Web Page Monitor</h1>\r\n      </StyledHeading>\r\n      <div className=\"login-form\">\r\n        <div className=\"form-group\">\r\n          <label>Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => {\r\n              setConfirmPassword(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={loginHandler}\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n        >\r\n          SignUp\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            props.setIsSignUp(false);\r\n          }}\r\n          type=\"submit\"\r\n          className=\"btn btn-secondary login-btn\"\r\n        >\r\n          Back to Login\r\n        </button>\r\n      </div>\r\n    </StyledSignUpPage>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;\r\n","import SignUpPage from \"./SignUpPage\";\r\nexport default SignUpPage;","import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport HomePage from \"./components/home-page/HomePage\";\r\nimport LoginPage from \"./components/login-page\";\r\nimport SignUpPage from \"./components/signup-page\";\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  useEffect(() => {\r\n    setIsLoggedIn(JSON.parse(localStorage.getItem(\"isLoggedIn\")));\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      {isLoggedIn ? (\r\n        <HomePage setIsLoggedIn={setIsLoggedIn} />\r\n      ) : isSignUp ? (\r\n        <SignUpPage setIsSignUp={setIsSignUp} />\r\n      ) : (\r\n        <LoginPage\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          isSignUp={isSignUp}\r\n          setIsSignUp={setIsSignUp}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}